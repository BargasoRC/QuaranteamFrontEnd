<template>
  <div style="padding : 1%; margin-top: 3%;">
    <v-data-table :headers="headers" :items="CenterTasks" sort-by="location" class="elevation-3">
      <template v-slot:top>
        <v-toolbar flat color="white">
          <v-toolbar-title>PN Center Tasks</v-toolbar-title>
          <v-divider class="mx-4" inset vertical></v-divider>
          <v-spacer></v-spacer>
        </v-toolbar>
      </template>
      <template v-slot:item.actions="{ item }">
        <v-icon small class="mr-2" @click="editItem(item)" color="warning">mdi-pencil</v-icon>
        <v-icon small @click="deleteItem(item)" color="error">mdi-delete</v-icon>
      </template>
      <template v-slot:no-data>
        <v-btn color="primary" @click="initialize">Reset</v-btn>
      </template>
    </v-data-table>
    <AddTask/>
  </div>
</template>

<script>
import AddTask from "@/components/Modals/AddTask.vue";

export default {
  name: "TaskList",
  data: () => ({
    dialog: false,
    headers: [
      {
        text: "Task name",
        align: "start",
        sortable: false,
        value: "task_name"
      },
      { text: "No. of Students", value: "noOfstudents", sortable: false },
      { text: "Difficulty", value: "task_difficulty", sortable: false },
      { text: "Location", value: "location" },
      { text: "Actions", value: "actions", sortable: false }
    ],
    tasks: []
    // editedIndex: -1,
    // editedItem: {
    //   task_name: "",
    //   noOfstudents: 0,
    //   task_difficulty: 0,
    //   location: 0
    // },
    // defaultItem: {
    //   task_name: "",
    //   noOfstudents: 0,
    //   task_difficulty: 0,
    //   location: 0
    // }
  }),
  components: {
    AddTask
  },
  computed: {
    // formTitle() {
    //   return this.editedIndex === -1 ? "New Item" : "Edit Item";
    // }
    CenterTasks() {
      return this.$store.state.centerTasks;
    }
  },

  watch: {
    // dialog(val) {
    //   val || this.close();
    // }
  },

//   created() {
//     this.initialize();
//   },

  methods: {
    // initialize() {
    //   this.tasks = [
    //     {
    //       task_name: "Kitchen",
    //       task_difficulty: "Hard",
    //       noOfstudents: 8,
    //       location: "Center 1"
    //     },
    //     {
    //       task_name: "Dishwashing",
    //       task_difficulty: "Hard",
    //       noOfstudents: 12,
    //       location: "Center 2"
    //     }
    //   ];
    // }

    // editItem(item) {
    //   this.editedIndex = this.tasks.indexOf(item);
    //   this.editedItem = Object.assign({}, item);
    //   this.dialog = true;
    // },

    // deleteItem(item) {
    //   const index = this.tasks.indexOf(item);
    //   confirm("Are you sure you want to delete this item?") &&
    //     this.tasks.splice(index, 1);
    // },

    // close() {
    //   this.dialog = false;
    //   this.$nextTick(() => {
    //     this.editedItem = Object.assign({}, this.defaultItem);
    //     this.editedIndex = -1;
    //   });
    // },

    // save() {
    //   if (this.editedIndex > -1) {
    //     Object.assign(this.tasks[this.editedIndex], this.editedItem);
    //   } else {
    //     this.tasks.push(this.editedItem);
    //   }
    //   this.close();
    // }
  }
};
</script>